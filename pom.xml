<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.infinities.skyport</groupId>
		<artifactId>skyport-dependencies</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>skyport-core</artifactId>
	<version>3.4.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>skyport-core</name>

	<dependencies>
		<!-- Skyport drivers -->

		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-entity</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-websockify</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-hazelcast</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>skyport-distributed</artifactId>
		</dependency>
		<!-- <dependency> <groupId>com.infinities.skyport</groupId> <artifactId>plugin-icloud</artifactId> 
			</dependency> -->

		<!-- cloud driver -->
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>cloud-openstack</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>cloud-mock</artifactId>
		</dependency>

		<dependency>
			<groupId>com.infinities.skyport</groupId>
			<artifactId>nova2.0-api</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-servlet</artifactId>
		</dependency>


		<!-- Logging (slf4j with logback as an implementation) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>

		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-entitymanager</artifactId> 
			</dependency> <dependency> <groupId>com.jolbox</groupId> <artifactId>bonecp</artifactId> 
			</dependency> -->

		<!-- Database -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<!-- Embedded Tomcat -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-logging-log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina-ha</artifactId>
		</dependency>

		<!-- <dependency> <groupId>tomcat</groupId> <artifactId>tomcat-juli</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>


		<!-- for testing -->
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.infinities.skyport.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<version>2.6</version> <executions> <execution> <id>copy-dependencies</id> 
				<phase>package</phase> <goals> <goal>copy-dependencies</goal> </goals> <configuration> 
				<outputDirectory>${project.build.directory}/lib</outputDirectory> <overWriteReleases>false</overWriteReleases> 
				<overWriteSnapshots>false</overWriteSnapshots> <overWriteIfNewer>true</overWriteIfNewer> 
				</configuration> </execution> </executions> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> 
				<artifactId>appassembler-maven-plugin</artifactId> <version>1.7</version> 
				<configuration> <configurationDirectory>config</configurationDirectory> <repositoryLayout>flat</repositoryLayout> 
				<repositoryName>lib</repositoryName> <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath> 
				<target>${project.build.directory}</target> <daemons> <daemon> <id>skyport</id> 
				<mainClass>com.infinities.skyport.Main</mainClass> <commandLineArguments> 
				<commandLineArgument>start</commandLineArgument> </commandLineArguments> 
				<platforms> <platform>jsw</platform> </platforms> <generatorConfigurations> 
				<generatorConfiguration> <generator>jsw</generator> <includes> <include>linux-x86-32</include> 
				<include>linux-x86-64</include> <include>windows-x86-32</include> <include>windows-x86-64</include> 
				<include>macosx-universal-32</include> <include>macosx-universal-64</include> 
				<include>aix-ppc-32</include> <include>aix-ppc-64</include> <include>hpux-parisc-64</include> 
				<include>linux-ppc-32</include> <include>linux-ppc-64</include> <include>macosx-ppc-32</include> 
				<include>macosx-x86-universal-32</include> <include>solaris-sparc-32</include> 
				<include>solaris-sparc-64</include> <include>solaris-x86-32</include> </includes> 
				<configuration> <property> <name>configuration.directory.in.classpath.first</name> 
				<value>lib</value> </property> <property> <name>set.default.REPO_DIR</name> 
				<value>lib</value> </property> <property> <name>wrapper.logfile</name> <value>log/wrapper.log</value> 
				</property> <property> <name>wrapper.pidfile</name> <value></value> </property> 
				<property> <name>skyport.version</name> <value>${project.version}-${maven.build.timestamp}</value> 
				</property> <property> <name>run.as.user.envvar</name> <value>root</value> 
				</property> </configuration> </generatorConfiguration> </generatorConfigurations> 
				<jvmSettings> <initialMemorySize>256M</initialMemorySize> <maxMemorySize>512M</maxMemorySize> 
				<systemProperties> <systemProperty>java.security.policy=conf/policy.all</systemProperty> 
				<systemProperty>com.sun.management.jmxremote</systemProperty> <systemProperty>com.sun.management.jmxremote.port=8999</systemProperty> 
				<systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty> 
				<systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty> </systemProperties> 
				<extraArguments> <extraArgument>-server</extraArgument> </extraArguments> 
				</jvmSettings> </daemon> </daemons> </configuration> <executions> <execution> 
				<id>generate-jsw-scripts</id> <phase>package</phase> <goals> <goal>generate-daemons</goal> 
				</goals> </execution> </executions> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-antrun-plugin</artifactId> <version>1.6</version> <executions> 
				<execution> <phase>package</phase> <configuration> <target> <property name="tomcat" 
				value="tomcat.context" /> <copy todir="target/jsw/skyport/${tomcat}"> <fileset 
				dir="${tomcat}" excludes="work/**" /> </copy> <property name="db" value="db" 
				/> <copy todir="target/${db}"> <fileset dir="${db}" /> </copy> <property 
				name="config" value="config" /> <copy todir="target/jsw/skyport/${config}"> 
				<fileset dir="${config}" /> </copy> <copy file="accessconfig.xml" tofile="target/jsw/skyport/accessconfig.xml" 
				/> <copy file="hibernate.reveng.xml" tofile="target/jsw/skyport/hibernate.reveng.xml" 
				/> <copy file="README.md" tofile="target/jsw/skyport/README.md" /> <chmod 
				file="target/jsw/skyport/bin/*" perm="755" /> </target> <encoding>UTF-8</encoding> 
				</configuration> <goals> <goal>run</goal> </goals> </execution> </executions> 
				</plugin> -->

		</plugins>
	</build>

</project>
